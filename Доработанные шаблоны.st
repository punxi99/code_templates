{1,
{3,
{"Доработанные",1,0,"",""},
{7,
{"БСП",1,0,"",""},
{0,
{"ЗначениеРеквизитаОбъекта",0,0,"Знач","Данные = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(<?""Источник"">, ""<?""Название реквизита"">"");"}
},
{0,
{"ЗначениеРеквизитовОбъекта",0,0,"Знач","Данные = ОбщегоНазначения.ЗначениеРеквизитовОбъекта(<?""Источник"">, ""<?""Названия реквизитов"">"");"}
},
{0,
{"ЗначениеРеквизитаОбъектов",0,0,"Знач","Данные<?""Источник""> = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(<?""Источник"">, ""<?""Название реквизита"">"");"}
},
{0,
{"ЗначениеРеквизитовОбъектов",0,0,"Знач","Данные<?""Источник""> = ОбщегоНазначения.ЗначениеРеквизитовОбъектов(<?""Источник"">, ""<?""Название реквизитов"">"");"}
},
{0,
{"Сообщение сервер",0,0,"Сооб","ОбщегоНазначения.СообщитьПользователю();"}
},
{0,
{"Сообщение клиент",0,0,"Сооб","ОбщегоНазначенияКлиент.СообщитьПользователю();"}
},
{0,
{"Макет",0,0,"Макет","УправлениеПечатью.МакетПечатнойФормы("""");"}
}
},
{4,
{"Структура модуля",1,0,"",""},
{0,
{"Общий модуль",0,0,"Струк","#Область ПрограммныйИнтерфейс
// Код процедур и функций
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// Код процедур и функций
#КонецОбласти"}
},
{0,
{"Модули объектов, менеджеров, наборов записей",0,0,"Струк","#Область ОписаниеПеременных

#КонецОбласти

#Область ПрограммныйИнтерфейс
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиСобытий
// Код процедур и функций
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// Код процедур и функций
#КонецОбласти"}
},
{0,
{"Модуль формы",0,0,"Струк","#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы<ИмяТаблицыФормы>
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиКомандФормы
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// Код процедур и функций
#КонецОбласти"}
},
{0,
{"Общий модуль",0,0,"Струк","#Область ПрограммныйИнтерфейс
// Код процедур и функций
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// Код процедур и функций
#КонецОбласти"}
}
},
{10,
{"Базовые",1,0,"",""},
{0,
{"Функция",0,0,"Функ[ция]","Функция <?""Имя функции"">()
	
	// <?""Номер задачи""> <?"""", ДатаВремя, ""ДФ=dd.MM.yyyy""> daniil.vasilev@innostage-group.ru
	
	<?>
	
КонецФункции 
"}
},
{0,
{"Функция модуля формы",0,0,"Функ[ция]","&<?""Выберите директиву компиляции"", ВыборВарианта, ""НаКлиенте"", ""НаКлиенте"", ""НаСервере"", ""НаСервере"", ""НаСервереБезКонтекста"", ""НаСервереБезКонтекста"", ""НаКлиентеНаСервереБезКонтекста"", ""НаКлиентеНаСервереБезКонтекста"">
Функция <?""Имя функции"">()
	
	// <?""Номер задачи""> <?"""", ДатаВремя, ""ДФ=dd.MM.yyyy""> daniil.vasilev@innostage-group.ru
	
	<?>
	
КонецФункции 
"}
},
{0,
{"Процедура",0,0,"Проц[едура]","Процедура <?""Имя процедуры"">()
	
	// <?""Номер задачи""> <?"""", ДатаВремя, ""ДФ=dd.MM.yyyy""> daniil.vasilev@innostage-group.ru
	
	<?>
	
КонецПроцедуры
"}
},
{0,
{"Процедура модуля формы",0,0,"Проц[едура]","&<?""Выберите директиву компиляции"", ВыборВарианта, ""НаКлиенте"", ""НаКлиенте"", ""НаСервере"", ""НаСервере"", ""НаСервереБезКонтекста"", ""НаСервереБезКонтекста"", ""НаКлиентеНаСервереБезКонтекста"", ""НаКлиентеНаСервереБезКонтекста"">
Процедура <?""Имя процедуры"">()
	
	// <?""Номер задачи""> <?"""", ДатаВремя, ""ДФ=dd.MM.yyyy""> daniil.vasilev@innostage-group.ru
	
	<?>
	
КонецПроцедуры 
"}
},
{0,
{"Проверка типа",0,0,"Тип","Если ТипЗнч(<?""Объект проверки"">) = Тип("""") Тогда
	
	<?>
	
КонецЕсли;"}
},
{0,
{"Создание и наполнение массива",0,0,"Мас[ив]","<?""НазваниеМассива""> = Новый Массив;
<?""НазваниеМассива"">.Добавить(<?""Элемент"">);"}
},
{0,
{"Запрос с параметром",0,0,"За[прос]","Запрос = Новый Запрос;
Запрос.Текст = 
"""";

Запрос.УстановитьПараметр("""", );
Результат = Запрос.Выполнить();
Данные = Результат.<?""Метод обработки"", ВыборВарианта, ""Выгрузить"", ""Выгрузить()"", ""Выбрать"", ""Выбрать()"">;



"}
},
{0,
{"Пакет запросов с параметром",0,0,"За[прос]","	Запрос = Новый Запрос;
	Запрос.Текст = 
	"""";
	
	Запрос.УстановитьПараметр("""", );
	
	РезультатЗапросов = Запрос.ВыполнитьПакет();
	Данные1 = РезультатЗапросов[РезультатЗапросов.ВГраница() -1];
	Данные2 = РезультатЗапросов[РезультатЗапросов.ВГраница()];
"}
},
{0,
{"КонструкторОписанияТипов",0,0,"Опис[аниеТипов]","<?""Конструктор описания типов"", КонструкторОписанияТипов>"}
},
{0,
{"Попытка",0,0,"Попы[тка]","Попытка
	
	<?>
	
Исключение
	ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	ЗаписьЖурналаРегистрации(""<?""Событие"">"", УровеньЖурналаРегистрации.Ошибка,,, ТекстОшибки);
КонецПопытки;"}
}
}
}
}